name: push-master

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup CMake and ninja
        # Using 'latest' branch, the latest CMake and ninja are installed.
        uses: lukka/get-cmake@latest

      - uses: TheMrMilchmann/setup-msvc-dev@v2
        with:
          arch: x64

      - name: Run CMake
        uses: lukka/run-cmake@v10
        with:
          # This is the default path to the CMakeLists.txt along side the
          # CMakePresets.json. Change if you need have CMakeLists.txt and CMakePresets.json
          # located elsewhere.
          # cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'

          # You could use CMake workflow presets defined in the CMakePresets.json
          # with just this line below. Note this one cannot be used with any other
          # preset input, it is mutually exclusive.
          # workflowPreset: 'workflow-name'

          # This is the name of the CMakePresets.json's configuration to use to generate
          # the project files. This configuration leverages the vcpkg.cmake toolchain file to
          # run vcpkg and install all dependencies specified in vcpkg.json.
          configurePreset: 'windows-release'

          # This is the name of the CMakePresets.json's configuration to build the project.
          buildPreset: 'release'

      - name: Upload a Build Artifact
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
          commit: 'master'
          tag: 'latest'
          artifacts: 'cmake-build-release/vsync.exe'
          bodyFile: "body.md"
